#!/usr/bin/env python3
"""
This script is executed automatically as a `pre_init` hook in the SigilStack worker system.

Purpose:
- Ensure that the SSM parameter `/sigilstack/definitions/coredns/force_seed` exists before Terraform init runs.
- This avoids errors during Terraform planning when attempting to read a non-existent parameter.
- AWS credentials and region are available in environment variables set by the worker system.

When to use a hook like this:
- To bootstrap state or secrets needed by Terraform, especially when they cannot be conditionally created inside HCL.
- To gracefully fill in required external resources without manual intervention.

Hooks like this are lightweight, idempotent, and serve as in-repo documentation for first-time setup logic.

AWS authentication is already configured via environment variables.
"""

import uuid

import boto3
import botocore

PARAM_NAME = "/sigilstack/definitions/coredns/force_seed"

ssm = boto3.client("ssm")

try:
    ssm.get_parameter(Name=PARAM_NAME)
except botocore.exceptions.ClientError as e:
    if e.response["Error"]["Code"] == "ParameterNotFound":
        seed = str(uuid.uuid4())
        print(f"Seed not found. Creating {PARAM_NAME} with value {seed}")
        ssm.put_parameter(
            Name=PARAM_NAME,
            Type="String",
            Value=seed,
            Overwrite=False,
            Description="Initial force seed for CoreDNS definition",
        )
    else:
        raise
